name: Build and Sign Stable

on:
  workflow_run:
    workflows: ["Build"]
    types: [requested]
    branches:
      - 'releases/**'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Type of build to perform'
        required: true
        default: 'stable'

defaults:
  run:
    shell: pwsh
    working-directory: ./Scripts  # Adjusted working directory path

jobs:
  build-and-sign:
    runs-on: windows-latest
    env:
      PFX_KEY: ${{ secrets.Pfx_Key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Update version to v3

      - name: Replace config values
        run: |
          ./replace.ps1 ../rustdesk-setup.cs '#CONFIG#' "${{ secrets.CONFIG }}"
          ./replace.ps1 ../rustdesk-setup.cs '#PASSWD#' "${{ secrets.PASSWD }}"

      - name: Install .NET 8 SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish AOT executable
        run: |
          dotnet publish -c Release -o out/ -r win-x64 --self-contained true /p:PublishSingleFile=true /p:AOT=true /p:OutputFileName="rustdesk-setup.exe"
          echo "::set-output name=output_filename::rustdesk-setup.exe"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.publish-executable.outputs.output_filename }}
          path: out/*.exe

      - name: Decode and store base64 encoded certificate
        run: |
          echo "${{ secrets.Base64_Encoded_Pfx }}" | base64 -d > certificate.pfx

      - name: Sign the executable
        run: |
          SignTool sign /f certificate.pfx /t http://timestamp.digicert.com /p $PFX_KEY /s out/*.exe
